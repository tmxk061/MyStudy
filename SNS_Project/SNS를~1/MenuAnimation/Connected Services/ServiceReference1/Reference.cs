//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MenuAnimation.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/Dashboard1")]
    [System.SerializableAttribute()]
    public partial class Post : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int POST_NUMField;
        
        private string POST_PHOTOField;
        
        private string POST_TEXTField;
        
        private int ACC_NUMField;
        
        private string POST_DATEField;
        
        private int POST_COUNTField;
        
        private int POST_LOVEField;
        
        private string POST_LINKField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int POST_NUM {
            get {
                return this.POST_NUMField;
            }
            set {
                if ((this.POST_NUMField.Equals(value) != true)) {
                    this.POST_NUMField = value;
                    this.RaisePropertyChanged("POST_NUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string POST_PHOTO {
            get {
                return this.POST_PHOTOField;
            }
            set {
                if ((object.ReferenceEquals(this.POST_PHOTOField, value) != true)) {
                    this.POST_PHOTOField = value;
                    this.RaisePropertyChanged("POST_PHOTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string POST_TEXT {
            get {
                return this.POST_TEXTField;
            }
            set {
                if ((object.ReferenceEquals(this.POST_TEXTField, value) != true)) {
                    this.POST_TEXTField = value;
                    this.RaisePropertyChanged("POST_TEXT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int ACC_NUM {
            get {
                return this.ACC_NUMField;
            }
            set {
                if ((this.ACC_NUMField.Equals(value) != true)) {
                    this.ACC_NUMField = value;
                    this.RaisePropertyChanged("ACC_NUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string POST_DATE {
            get {
                return this.POST_DATEField;
            }
            set {
                if ((object.ReferenceEquals(this.POST_DATEField, value) != true)) {
                    this.POST_DATEField = value;
                    this.RaisePropertyChanged("POST_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int POST_COUNT {
            get {
                return this.POST_COUNTField;
            }
            set {
                if ((this.POST_COUNTField.Equals(value) != true)) {
                    this.POST_COUNTField = value;
                    this.RaisePropertyChanged("POST_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public int POST_LOVE {
            get {
                return this.POST_LOVEField;
            }
            set {
                if ((this.POST_LOVEField.Equals(value) != true)) {
                    this.POST_LOVEField = value;
                    this.RaisePropertyChanged("POST_LOVE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public string POST_LINK {
            get {
                return this.POST_LINKField;
            }
            set {
                if ((object.ReferenceEquals(this.POST_LINKField, value) != true)) {
                    this.POST_LINKField = value;
                    this.RaisePropertyChanged("POST_LINK");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDataBaseCtr")]
    public interface IDataBaseCtr {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBaseCtr/FindPost", ReplyAction="http://tempuri.org/IDataBaseCtr/FindPostResponse")]
        MenuAnimation.ServiceReference1.Post[] FindPost(int ACC_NUM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBaseCtr/FindPost", ReplyAction="http://tempuri.org/IDataBaseCtr/FindPostResponse")]
        System.Threading.Tasks.Task<MenuAnimation.ServiceReference1.Post[]> FindPostAsync(int ACC_NUM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBaseCtr/AddPost", ReplyAction="http://tempuri.org/IDataBaseCtr/AddPostResponse")]
        void AddPost(string POST_LINK, string POST_TEXT, int ACC_NUM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBaseCtr/AddPost", ReplyAction="http://tempuri.org/IDataBaseCtr/AddPostResponse")]
        System.Threading.Tasks.Task AddPostAsync(string POST_LINK, string POST_TEXT, int ACC_NUM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBaseCtr/ConnectDB", ReplyAction="http://tempuri.org/IDataBaseCtr/ConnectDBResponse")]
        void ConnectDB();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBaseCtr/ConnectDB", ReplyAction="http://tempuri.org/IDataBaseCtr/ConnectDBResponse")]
        System.Threading.Tasks.Task ConnectDBAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBaseCtr/DisConnectDB", ReplyAction="http://tempuri.org/IDataBaseCtr/DisConnectDBResponse")]
        void DisConnectDB();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBaseCtr/DisConnectDB", ReplyAction="http://tempuri.org/IDataBaseCtr/DisConnectDBResponse")]
        System.Threading.Tasks.Task DisConnectDBAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataBaseCtrChannel : MenuAnimation.ServiceReference1.IDataBaseCtr, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataBaseCtrClient : System.ServiceModel.ClientBase<MenuAnimation.ServiceReference1.IDataBaseCtr>, MenuAnimation.ServiceReference1.IDataBaseCtr {
        
        public DataBaseCtrClient() {
        }
        
        public DataBaseCtrClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataBaseCtrClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataBaseCtrClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataBaseCtrClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MenuAnimation.ServiceReference1.Post[] FindPost(int ACC_NUM) {
            return base.Channel.FindPost(ACC_NUM);
        }
        
        public System.Threading.Tasks.Task<MenuAnimation.ServiceReference1.Post[]> FindPostAsync(int ACC_NUM) {
            return base.Channel.FindPostAsync(ACC_NUM);
        }
        
        public void AddPost(string POST_LINK, string POST_TEXT, int ACC_NUM) {
            base.Channel.AddPost(POST_LINK, POST_TEXT, ACC_NUM);
        }
        
        public System.Threading.Tasks.Task AddPostAsync(string POST_LINK, string POST_TEXT, int ACC_NUM) {
            return base.Channel.AddPostAsync(POST_LINK, POST_TEXT, ACC_NUM);
        }
        
        public void ConnectDB() {
            base.Channel.ConnectDB();
        }
        
        public System.Threading.Tasks.Task ConnectDBAsync() {
            return base.Channel.ConnectDBAsync();
        }
        
        public void DisConnectDB() {
            base.Channel.DisConnectDB();
        }
        
        public System.Threading.Tasks.Task DisConnectDBAsync() {
            return base.Channel.DisConnectDBAsync();
        }
    }
}
